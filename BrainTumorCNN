# TODO: Imports, Data Input, Create CNN, Compute Accuracy, Confusion Matrix

import requests
from PIL import Image
from io import BytesIO
import os

def download_images_from_github(repository_url, save_path):
    # Ensure the save path exists
    os.makedirs(save_path, exist_ok=True)

    # Fetch the file list from the GitHub repository
    api_url = repository_url.replace("github.com", "api.github.com/repos") + "/contents/"
    response = requests.get(api_url)
    response.raise_for_status()
    files = response.json()

    images = []

    for file_info in files:
        if file_info["name"].endswith('.jpg'):
            image_url = file_info["download_url"]
            image_response = requests.get(image_url)
            image_response.raise_for_status()

            # Convert the image content to a PIL Image
            image = Image.open(BytesIO(image_response.content))
            images.append(image)

            # Save the image to the specified directory
            image.save(os.path.join(save_path, file_info["name"]))

    return images

if __name__ == "__main__":
    # Replace with your GitHub repository URL
    repository_url = "https://github.com/username/repository"

    # Replace with the local directory to save images
    save_path = "path/to/save/images"

    # Download images from GitHub
    downloaded_images = download_images_from_github(repository_url, save_path)

    # Rest of code...
